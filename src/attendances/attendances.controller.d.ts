import { AttendancesService } from './attendances.service';
import { ClockInDto } from './dto/clock-in.dto';
import { ClockOutDto } from './dto/clock-out.dto';
import { RequestLeaveDto } from './dto/request-leave.dto';
import { Response } from 'express';
export declare class AttendancesController {
    private readonly attendancesService;
    constructor(attendancesService: AttendancesService);
    clockIn(req: any, clockInDto: ClockInDto, ip: string): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.AttendanceStatus;
        userId: number;
        submittedAt: Date | null;
        latitude: number | null;
        longitude: number | null;
        clockIn: Date | null;
        clockOut: Date | null;
        ipAddress: string | null;
        clockOutLatitude: number | null;
        clockOutLongitude: number | null;
        reasonDescription: string | null;
        proofFilePath: string | null;
        validatedBy: number | null;
        validatedAt: Date | null;
    }>;
    clockOut(clockOutDto: ClockOutDto, req: any): Promise<{
        message: string;
        attendance: {
            clockOutCoordinates: {
                latitude: number | null;
                longitude: number | null;
            };
            id: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.AttendanceStatus;
            userId: number;
            submittedAt: Date | null;
            latitude: number | null;
            longitude: number | null;
            clockIn: Date | null;
            clockOut: Date | null;
            ipAddress: string | null;
            clockOutLatitude: number | null;
            clockOutLongitude: number | null;
            reasonDescription: string | null;
            proofFilePath: string | null;
            validatedBy: number | null;
            validatedAt: Date | null;
        };
    }>;
    findAll(req: any): Promise<{
        data: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.AttendanceStatus;
            userId: number;
            submittedAt: Date | null;
            latitude: number | null;
            longitude: number | null;
            clockIn: Date | null;
            clockOut: Date | null;
            ipAddress: string | null;
            clockOutLatitude: number | null;
            clockOutLongitude: number | null;
            reasonDescription: string | null;
            proofFilePath: string | null;
            validatedBy: number | null;
            validatedAt: Date | null;
        }[];
    }>;
    getAllAttendances(page?: number, limit?: number): Promise<{
        data: ({
            user: {
                id: number;
                name: string;
                email: string;
                password: string;
                profilePhoto: string | null;
                namaLengkap: string | null;
                nimNisn: string | null;
                asalInstitusi: string | null;
                jurusanProdi: string | null;
                nomorTelepon: string | null;
                alamat: string | null;
                roleId: number;
                createdAt: Date;
                updatedAt: Date;
                deletedAt: Date | null;
                educationStatus: string | null;
                activityType: string | null;
                activityStart: Date | null;
                activityEnd: Date | null;
                isGraduated: boolean;
                isEmailVerified: boolean;
                emailOtp: string | null;
                emailOtpExpires: Date | null;
                lastOtpSentAt: Date | null;
                resetPasswordOtp: string | null;
                resetPasswordOtpExpires: Date | null;
            };
        } & {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.AttendanceStatus;
            userId: number;
            submittedAt: Date | null;
            latitude: number | null;
            longitude: number | null;
            clockIn: Date | null;
            clockOut: Date | null;
            ipAddress: string | null;
            clockOutLatitude: number | null;
            clockOutLongitude: number | null;
            reasonDescription: string | null;
            proofFilePath: string | null;
            validatedBy: number | null;
            validatedAt: Date | null;
        })[];
        total: number;
        page: number;
        lastPage: number;
    }>;
    exportAllAttendancesPdf(startDate: string, endDate: string, institution: string, res: Response, req: any): Promise<void>;
    findOne(id: string): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.AttendanceStatus;
        userId: number;
        submittedAt: Date | null;
        latitude: number | null;
        longitude: number | null;
        clockIn: Date | null;
        clockOut: Date | null;
        ipAddress: string | null;
        clockOutLatitude: number | null;
        clockOutLongitude: number | null;
        reasonDescription: string | null;
        proofFilePath: string | null;
        validatedBy: number | null;
        validatedAt: Date | null;
    }>;
    requestLeave(req: any, dto: RequestLeaveDto, file: Express.Multer.File | null): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.AttendanceStatus;
        userId: number;
        submittedAt: Date | null;
        latitude: number | null;
        longitude: number | null;
        clockIn: Date | null;
        clockOut: Date | null;
        ipAddress: string | null;
        clockOutLatitude: number | null;
        clockOutLongitude: number | null;
        reasonDescription: string | null;
        proofFilePath: string | null;
        validatedBy: number | null;
        validatedAt: Date | null;
    }>;
    validateLeave(id: string, status: 'hadir' | 'sakit' | 'izin' | 'tanpa_keterangan', req: any): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.AttendanceStatus;
        userId: number;
        submittedAt: Date | null;
        latitude: number | null;
        longitude: number | null;
        clockIn: Date | null;
        clockOut: Date | null;
        ipAddress: string | null;
        clockOutLatitude: number | null;
        clockOutLongitude: number | null;
        reasonDescription: string | null;
        proofFilePath: string | null;
        validatedBy: number | null;
        validatedAt: Date | null;
    }>;
    exportUserAttendancePdf(userId: string, startDate: string, endDate: string, res: Response, req: any): Promise<void>;
}
