import { PrismaService } from '../prisma/prisma.service';
import { CreateCertificateDto } from './dto/create-certificate.dto';
export declare class CertificatesService {
    private prisma;
    constructor(prisma: PrismaService);
    private drawTextCentered;
    generateCertificate(dto: CreateCertificateDto, adminId: number): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.CertificateStatus;
        userId: number;
        createdBy: number;
        certificateNumber: string;
        internName: string;
        educationalStatus: string;
        institusi: string;
        predicate: string;
        namaKegiatan: string;
        activityPeriod: string;
        tglSertifikat: Date;
        namaKepalaBPS: string;
        nipKepalaBPS: string;
        templatePath: string;
        signedFilePath: string | null;
        generatedAt: Date;
        signedAt: Date | null;
        issuedAt: Date | null;
        updatedBy: number | null;
    }>;
    uploadSignedCertificate(id: number, filePath: string, adminId: number): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.CertificateStatus;
        userId: number;
        createdBy: number;
        certificateNumber: string;
        internName: string;
        educationalStatus: string;
        institusi: string;
        predicate: string;
        namaKegiatan: string;
        activityPeriod: string;
        tglSertifikat: Date;
        namaKepalaBPS: string;
        nipKepalaBPS: string;
        templatePath: string;
        signedFilePath: string | null;
        generatedAt: Date;
        signedAt: Date | null;
        issuedAt: Date | null;
        updatedBy: number | null;
    }>;
    issueCertificate(id: number, adminId: number): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.CertificateStatus;
        userId: number;
        createdBy: number;
        certificateNumber: string;
        internName: string;
        educationalStatus: string;
        institusi: string;
        predicate: string;
        namaKegiatan: string;
        activityPeriod: string;
        tglSertifikat: Date;
        namaKepalaBPS: string;
        nipKepalaBPS: string;
        templatePath: string;
        signedFilePath: string | null;
        generatedAt: Date;
        signedAt: Date | null;
        issuedAt: Date | null;
        updatedBy: number | null;
    }>;
    getCertificateByUser(userId: number): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.CertificateStatus;
        userId: number;
        createdBy: number;
        certificateNumber: string;
        internName: string;
        educationalStatus: string;
        institusi: string;
        predicate: string;
        namaKegiatan: string;
        activityPeriod: string;
        tglSertifikat: Date;
        namaKepalaBPS: string;
        nipKepalaBPS: string;
        templatePath: string;
        signedFilePath: string | null;
        generatedAt: Date;
        signedAt: Date | null;
        issuedAt: Date | null;
        updatedBy: number | null;
    } | null>;
    getCertificateById(id: number): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.CertificateStatus;
        userId: number;
        createdBy: number;
        certificateNumber: string;
        internName: string;
        educationalStatus: string;
        institusi: string;
        predicate: string;
        namaKegiatan: string;
        activityPeriod: string;
        tglSertifikat: Date;
        namaKepalaBPS: string;
        nipKepalaBPS: string;
        templatePath: string;
        signedFilePath: string | null;
        generatedAt: Date;
        signedAt: Date | null;
        issuedAt: Date | null;
        updatedBy: number | null;
    } | null>;
    getAllCertificates(): Promise<({
        user: {
            id: number;
            name: string;
            email: string;
            namaLengkap: string | null;
            asalInstitusi: string | null;
            isGraduated: boolean;
        };
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.CertificateStatus;
        userId: number;
        createdBy: number;
        certificateNumber: string;
        internName: string;
        educationalStatus: string;
        institusi: string;
        predicate: string;
        namaKegiatan: string;
        activityPeriod: string;
        tglSertifikat: Date;
        namaKepalaBPS: string;
        nipKepalaBPS: string;
        templatePath: string;
        signedFilePath: string | null;
        generatedAt: Date;
        signedAt: Date | null;
        issuedAt: Date | null;
        updatedBy: number | null;
    })[]>;
}
